{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\React\\\\Food-Meals-App\\\\src\\\\store\\\\CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type == 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/React/Food-Meals-App/src/store/CartProvider.jsx"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,WAAW,EAAE;AAFW,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,IAAe,KAAnB,EAA0B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACvBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADrD;AAEA,WAAO;AACNX,MAAAA,KAAK,EAAEM,YADD;AAENL,MAAAA,WAAW,EAAEQ;AAFP,KAAP;AAIA;;AACD,SAAOV,gBAAP;AACA,CAXD;;AAaA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CACjDK,WADiD,EAEjDH,gBAFiD,CAAlD;;AAIA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACtCO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACA,GAFD;;AAGA,QAAMS,uBAAuB,GAAIC,EAAD,IAAQ;AACvCH,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACA,GAFD;;AAGA,QAAMC,WAAW,GAAG;AACnBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADE;AAEnBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFJ;AAGnBmB,IAAAA,OAAO,EAAEJ,oBAHU;AAInBK,IAAAA,UAAU,EAAEJ;AAJO,GAApB;AAMA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACEN,KAAK,CAACS;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n\titems: [],\r\n\ttotalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n\tif (action.type == 'ADD') {\r\n\t\tconst updatedItems = state.items.concat(action.item);\r\n\t\tconst updatedTotalAmount =\r\n\t\t\tstate.totalAmount + action.item.price * action.item.amount;\r\n\t\treturn {\r\n\t\t\titems: updatedItems,\r\n\t\t\ttotalAmount: updatedTotalAmount,\r\n\t\t};\r\n\t}\r\n\treturn defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n\tconst [cartState, dispatchCartAction] = useReducer(\r\n\t\tcartReducer,\r\n\t\tdefaultCartState\r\n\t);\r\n\tconst addItemToCartHandler = (item) => {\r\n\t\tdispatchCartAction({ type: 'ADD', item: item });\r\n\t};\r\n\tconst removeItemToCartHandler = (id) => {\r\n\t\tdispatchCartAction({ type: 'REMOVE', id: id });\r\n\t};\r\n\tconst cartContext = {\r\n\t\titems: cartState.items,\r\n\t\ttotalAmount: cartState.totalAmount,\r\n\t\taddItem: addItemToCartHandler,\r\n\t\tremoveItem: removeItemToCartHandler,\r\n\t};\r\n\treturn (\r\n\t\t<CartContext.Provider value={cartContext}>\r\n\t\t\t{props.children}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}